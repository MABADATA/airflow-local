[2023-04-30 11:08:28,733] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: multi_attack_dag.attack_ProjectedGradientDescent manual__2023-04-30T11:02:44.097488+00:00 [queued]>
[2023-04-30 11:08:28,765] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: multi_attack_dag.attack_ProjectedGradientDescent manual__2023-04-30T11:02:44.097488+00:00 [queued]>
[2023-04-30 11:08:28,766] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-04-30 11:08:28,767] {taskinstance.py:1357} INFO - Starting attempt 2 of 2
[2023-04-30 11:08:28,768] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-04-30 11:08:28,831] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): attack_ProjectedGradientDescent> on 2023-04-30 11:02:44.097488+00:00
[2023-04-30 11:08:28,860] {standard_task_runner.py:52} INFO - Started process 380 to run task
[2023-04-30 11:08:28,881] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'multi_attack_dag', 'attack_ProjectedGradientDescent', 'manual__2023-04-30T11:02:44.097488+00:00', '--job-id', '7433', '--raw', '--subdir', 'DAGS_FOLDER/attack_dag.py', '--cfg-path', '/tmp/tmpscjrv_pu', '--error-file', '/tmp/tmprbmzkq7y']
[2023-04-30 11:08:28,886] {standard_task_runner.py:80} INFO - Job 7433: Subtask attack_ProjectedGradientDescent
[2023-04-30 11:08:29,069] {task_command.py:369} INFO - Running <TaskInstance: multi_attack_dag.attack_ProjectedGradientDescent manual__2023-04-30T11:02:44.097488+00:00 [running]> on host 873e5d3a4399
[2023-04-30 11:08:29,267] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=multi_attack_dag
AIRFLOW_CTX_TASK_ID=attack_ProjectedGradientDescent
AIRFLOW_CTX_EXECUTION_DATE=2023-04-30T11:02:44.097488+00:00
AIRFLOW_CTX_TRY_NUMBER=2
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-04-30T11:02:44.097488+00:00
[2023-04-30 11:08:29,273] {transport.py:157} INFO - Attempting refresh to obtain initial access_token
[2023-04-30 11:08:29,282] {client.py:777} INFO - Refreshing access_token
[2023-04-30 11:08:30,897] {estimator_helpers.py:53} INFO - Getting estimator...
[2023-04-30 11:08:30,907] {transport.py:157} INFO - Attempting refresh to obtain initial access_token
[2023-04-30 11:08:30,912] {client.py:777} INFO - Refreshing access_token
[2023-04-30 11:08:31,854] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 171, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 189, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/attack.py", line 215, in attack_ProjectedGradientDescent
    model_acc,adversarial_examples = attack(ProjectedGradientDescent)
  File "/opt/airflow/dags/attack.py", line 33, in attack
    estimator = get_estimator()
  File "/opt/airflow/dags/estimator_helpers.py", line 56, in get_estimator
    model = load_from_bucket("ML_model.pickle")
  File "/opt/airflow/dags/helpers.py", line 123, in load_from_bucket
    raise err
  File "/opt/airflow/dags/helpers.py", line 120, in load_from_bucket
    loaded_obj = cloudpickle.load(f)
TypeError: code() takes at most 15 arguments (16 given)
[2023-04-30 11:08:31,894] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=multi_attack_dag, task_id=attack_ProjectedGradientDescent, execution_date=20230430T110244, start_date=20230430T110828, end_date=20230430T110831
[2023-04-30 11:08:31,951] {standard_task_runner.py:97} ERROR - Failed to execute job 7433 for task attack_ProjectedGradientDescent (code() takes at most 15 arguments (16 given); 380)
[2023-04-30 11:08:32,018] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-04-30 11:08:32,130] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
