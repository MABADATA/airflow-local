[2023-03-19 10:39:36,644] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: xcom_dag.attack1 manual__2023-03-19T10:39:32.588758+00:00 [queued]>
[2023-03-19 10:39:36,652] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: xcom_dag.attack1 manual__2023-03-19T10:39:32.588758+00:00 [queued]>
[2023-03-19 10:39:36,652] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-03-19 10:39:36,653] {taskinstance.py:1357} INFO - Starting attempt 1 of 2
[2023-03-19 10:39:36,653] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-03-19 10:39:36,664] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): attack1> on 2023-03-19 10:39:32.588758+00:00
[2023-03-19 10:39:36,668] {standard_task_runner.py:52} INFO - Started process 102 to run task
[2023-03-19 10:39:36,671] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'xcom_dag', 'attack1', 'manual__2023-03-19T10:39:32.588758+00:00', '--job-id', '1608', '--raw', '--subdir', 'DAGS_FOLDER/dynamic_dag.py', '--cfg-path', '/tmp/tmplqqn2273', '--error-file', '/tmp/tmpfffvh2fo']
[2023-03-19 10:39:36,672] {standard_task_runner.py:80} INFO - Job 1608: Subtask attack1
[2023-03-19 10:39:36,721] {task_command.py:369} INFO - Running <TaskInstance: xcom_dag.attack1 manual__2023-03-19T10:39:32.588758+00:00 [running]> on host de4be3e36311
[2023-03-19 10:39:36,779] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=xcom_dag
AIRFLOW_CTX_TASK_ID=attack1
AIRFLOW_CTX_EXECUTION_DATE=2023-03-19T10:39:32.588758+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-03-19T10:39:32.588758+00:00
[2023-03-19 10:39:36,793] {xcom.py:585} ERROR - Could not serialize the XCom value into JSON. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config.
[2023-03-19 10:39:36,794] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/opt/airflow/dags/dynamic_dag.py", line 97, in attack1
    gcs_hook = GCSHook()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/google/cloud/hooks/gcs.py", line 152, in __init__
    impersonation_chain=impersonation_chain,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/providers/google/common/hooks/base_google.py", line 219, in __init__
    self.extras = self.get_connection(self.gcp_conn_id).extra_dejson  # type: Dict
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/hooks/base.py", line 67, in get_connection
    conn = Connection.get_connection_from_secrets(conn_id)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/connection.py", line 430, in get_connection_from_secrets
    raise AirflowNotFoundException(f"The conn_id `{conn_id}` isn't defined")
airflow.exceptions.AirflowNotFoundException: The conn_id `google_cloud_default` isn't defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 171, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/operators/python.py", line 189, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/dynamic_dag.py", line 101, in attack1
    ti.xcom_push(key='Error in files', value=err)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 71, in wrapper
    return func(*args, session=session, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 2380, in xcom_push
    session=session,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 197, in set
    map_index=map_index,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 582, in serialize_value
    return json.dumps(value).encode('UTF-8')
  File "/usr/local/lib/python3.7/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type AirflowNotFoundException is not JSON serializable
[2023-03-19 10:39:36,807] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=xcom_dag, task_id=attack1, execution_date=20230319T103932, start_date=20230319T103936, end_date=20230319T103936
[2023-03-19 10:39:36,817] {standard_task_runner.py:97} ERROR - Failed to execute job 1608 for task attack1 (Object of type AirflowNotFoundException is not JSON serializable; 102)
[2023-03-19 10:39:36,845] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-03-19 10:39:36,877] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
